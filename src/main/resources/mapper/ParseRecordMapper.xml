<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssdkj.bbs.modular.dao.ParseRecordMapper" >
  <resultMap id="BaseResultMap" type="com.ssdkj.bbs.modular.model.ParseRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    <id column="parseId" property="parseId" jdbcType="BIGINT" />
    <result column="parseAuthorId" property="parseAuthorId" jdbcType="BIGINT" />
    <result column="articleId" property="articleId" jdbcType="BIGINT" />
    <result column="parseTime" property="parseTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    parseId, parseAuthorId, articleId, parseTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssdkj.bbs.modular.model.ParseRecordExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parseRecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from parseRecord
    where parseId = #{parseId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    delete from parseRecord
    where parseId = #{parseId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssdkj.bbs.modular.model.ParseRecordExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    delete from parseRecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssdkj.bbs.modular.model.ParseRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    insert into parseRecord (parseId, parseAuthorId, articleId, 
      parseTime)
    values (#{parseId,jdbcType=BIGINT}, #{parseAuthorId,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, 
      #{parseTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssdkj.bbs.modular.model.ParseRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    insert into parseRecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="parseId != null" >
        parseId,
      </if>
      <if test="parseAuthorId != null" >
        parseAuthorId,
      </if>
      <if test="articleId != null" >
        articleId,
      </if>
        parseTime,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="parseId != null" >
        #{parseId,jdbcType=BIGINT},
      </if>
      <if test="parseAuthorId != null" >
        #{parseAuthorId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=BIGINT},
      </if>
        DATE_FORMAT(NOW(),'%Y-%m-%d %H:%i:%s'),
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssdkj.bbs.modular.model.ParseRecordExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    select count(*) from parseRecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    update parseRecord
    <set >
      <if test="record.parseId != null" >
        parseId = #{record.parseId,jdbcType=BIGINT},
      </if>
      <if test="record.parseAuthorId != null" >
        parseAuthorId = #{record.parseAuthorId,jdbcType=BIGINT},
      </if>
      <if test="record.articleId != null" >
        articleId = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.parseTime != null" >
        parseTime = #{record.parseTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    update parseRecord
    set parseId = #{record.parseId,jdbcType=BIGINT},
      parseAuthorId = #{record.parseAuthorId,jdbcType=BIGINT},
      articleId = #{record.articleId,jdbcType=BIGINT},
      parseTime = #{record.parseTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssdkj.bbs.modular.model.ParseRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    update parseRecord
    <set >
      <if test="parseAuthorId != null" >
        parseAuthorId = #{parseAuthorId,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        articleId = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="parseTime != null" >
        parseTime = #{parseTime,jdbcType=VARCHAR},
      </if>
    </set>
    where parseId = #{parseId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssdkj.bbs.modular.model.ParseRecord" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 14 13:47:57 CST 2019.
    -->
    update parseRecord
    set parseAuthorId = #{parseAuthorId,jdbcType=BIGINT},
      articleId = #{articleId,jdbcType=BIGINT},
      parseTime = #{parseTime,jdbcType=VARCHAR}
    where parseId = #{parseId,jdbcType=BIGINT}
  </update>
</mapper>
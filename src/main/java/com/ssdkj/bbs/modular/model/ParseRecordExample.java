package com.ssdkj.bbs.modular.model;

import java.util.ArrayList;
import java.util.List;

public class ParseRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public ParseRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andParseIdIsNull() {
            addCriterion("parseId is null");
            return (Criteria) this;
        }

        public Criteria andParseIdIsNotNull() {
            addCriterion("parseId is not null");
            return (Criteria) this;
        }

        public Criteria andParseIdEqualTo(Long value) {
            addCriterion("parseId =", value, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdNotEqualTo(Long value) {
            addCriterion("parseId <>", value, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdGreaterThan(Long value) {
            addCriterion("parseId >", value, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parseId >=", value, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdLessThan(Long value) {
            addCriterion("parseId <", value, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdLessThanOrEqualTo(Long value) {
            addCriterion("parseId <=", value, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdIn(List<Long> values) {
            addCriterion("parseId in", values, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdNotIn(List<Long> values) {
            addCriterion("parseId not in", values, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdBetween(Long value1, Long value2) {
            addCriterion("parseId between", value1, value2, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseIdNotBetween(Long value1, Long value2) {
            addCriterion("parseId not between", value1, value2, "parseId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdIsNull() {
            addCriterion("parseAuthorId is null");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdIsNotNull() {
            addCriterion("parseAuthorId is not null");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdEqualTo(Long value) {
            addCriterion("parseAuthorId =", value, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdNotEqualTo(Long value) {
            addCriterion("parseAuthorId <>", value, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdGreaterThan(Long value) {
            addCriterion("parseAuthorId >", value, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parseAuthorId >=", value, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdLessThan(Long value) {
            addCriterion("parseAuthorId <", value, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdLessThanOrEqualTo(Long value) {
            addCriterion("parseAuthorId <=", value, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdIn(List<Long> values) {
            addCriterion("parseAuthorId in", values, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdNotIn(List<Long> values) {
            addCriterion("parseAuthorId not in", values, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdBetween(Long value1, Long value2) {
            addCriterion("parseAuthorId between", value1, value2, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andParseAuthorIdNotBetween(Long value1, Long value2) {
            addCriterion("parseAuthorId not between", value1, value2, "parseAuthorId");
            return (Criteria) this;
        }

        public Criteria andArticleIdIsNull() {
            addCriterion("articleId is null");
            return (Criteria) this;
        }

        public Criteria andArticleIdIsNotNull() {
            addCriterion("articleId is not null");
            return (Criteria) this;
        }

        public Criteria andArticleIdEqualTo(Long value) {
            addCriterion("articleId =", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotEqualTo(Long value) {
            addCriterion("articleId <>", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThan(Long value) {
            addCriterion("articleId >", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("articleId >=", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThan(Long value) {
            addCriterion("articleId <", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThanOrEqualTo(Long value) {
            addCriterion("articleId <=", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdIn(List<Long> values) {
            addCriterion("articleId in", values, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotIn(List<Long> values) {
            addCriterion("articleId not in", values, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdBetween(Long value1, Long value2) {
            addCriterion("articleId between", value1, value2, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotBetween(Long value1, Long value2) {
            addCriterion("articleId not between", value1, value2, "articleId");
            return (Criteria) this;
        }

        public Criteria andParseTimeIsNull() {
            addCriterion("parseTime is null");
            return (Criteria) this;
        }

        public Criteria andParseTimeIsNotNull() {
            addCriterion("parseTime is not null");
            return (Criteria) this;
        }

        public Criteria andParseTimeEqualTo(String value) {
            addCriterion("parseTime =", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeNotEqualTo(String value) {
            addCriterion("parseTime <>", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeGreaterThan(String value) {
            addCriterion("parseTime >", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeGreaterThanOrEqualTo(String value) {
            addCriterion("parseTime >=", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeLessThan(String value) {
            addCriterion("parseTime <", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeLessThanOrEqualTo(String value) {
            addCriterion("parseTime <=", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeLike(String value) {
            addCriterion("parseTime like", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeNotLike(String value) {
            addCriterion("parseTime not like", value, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeIn(List<String> values) {
            addCriterion("parseTime in", values, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeNotIn(List<String> values) {
            addCriterion("parseTime not in", values, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeBetween(String value1, String value2) {
            addCriterion("parseTime between", value1, value2, "parseTime");
            return (Criteria) this;
        }

        public Criteria andParseTimeNotBetween(String value1, String value2) {
            addCriterion("parseTime not between", value1, value2, "parseTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parseRecord
     *
     * @mbggenerated do_not_delete_during_merge Mon Oct 14 13:51:24 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table parseRecord
     *
     * @mbggenerated Mon Oct 14 13:51:24 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}